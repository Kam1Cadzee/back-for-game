generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "node_modules/typegraphql-prisma/generator.js"
  output   = "../prisma/generated/type-graphql"
}

datasource db {
  provider = "postgresql"
  url = "***"
}

model User {
  createdAt DateTime @default(now())
  email     String   @default("") @unique
  id        Int      @default(autoincrement()) @id
  name      String   @default("")
  lastName  String   @default("")
  password  String   @default("")
  entities  Entity[]
  role      Role     @default(STANDARD)
  Word      Word[]
}

model PartOfSpeechDesc {
  id   Int          @default(autoincrement()) @id
  type PartOfSpeech
  ru   String
  ua   String
  en   String
}

enum Role {
  ADMIN
  STANDARD
}

enum PartOfSpeech {
  ADJ
  ADV
  CONJ
  DET
  MODAL
  NOUN
  PREP
  PRON
  VERB
  OTHER
}

model Irrverb {
  id      Int     @default(autoincrement()) @id
  form1EN String
  form2EN String
  form3EN String
  ru      String
  Entity  Entity?
}

model Entity {
  id           Int        @default(autoincrement()) @id
  title        String
  words        Word[]
  User         User       @relation(fields: [userId], references: [id])
  userId       Int
  phrases      Phrase[]
  sentences    Sentence[]
  irrverb      Irrverb?   @relation(fields: [irrverbId], references: [id])
  irrverbId    Int?
  isNeededEdit Boolean    @default(false)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @default(now())
  @@unique([title, userId], name: "unique_title_userId")
}

model Word {
  id        Int          @default(autoincrement()) @id
  en        String
  translate Translate[]  @relation(references: [id])
  type      PartOfSpeech @default(OTHER)
  entities  Entity[]
  createdAt DateTime     @default(now())
  updatedAt DateTime     @default(now())
  User      User         @relation(fields: [userId], references: [id])
  userId    Int
  @@unique([en, userId], name: "AnotherUser_firstname_lastname_key")
}

model Translate {
  id        Int          @default(autoincrement()) @id
  ru        String       @unique
  type      PartOfSpeech @default(OTHER)
  words     Word[]       @relation(references: [id])
  createdAt DateTime     @default(now())
  updatedAt DateTime     @default(now())
}

model Phrase {
  id       Int      @default(autoincrement()) @id
  phrase   String   @unique
  ru       String
  entities Entity[]
}

model Sentence {
  id       Int      @default(autoincrement()) @id
  sentence String   @unique
  ru       String
  entities Entity[]
}

model MobileApp {
  id        Int          @default(autoincrement()) @id
  createdAt DateTime     @default(now())
  version   String
  url       String
  status    StatusMobile @default(WORK)
}

enum StatusMobile {
  WORK
  DEPRECATED
}
